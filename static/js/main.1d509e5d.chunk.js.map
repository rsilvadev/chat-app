{"version":3,"sources":["components/Login.js","components/Message.js","App.js","index.js"],"names":["Login","user","setUser","room","setRoom","setUsername","className","onSubmit","e","type","value","onChange","target","Message","message","text","sendByCurrentUser","name","App","useState","setMessage","messages","setMessages","isUserSet","setIsUserSet","users","setUsers","isTyping","setIsTyping","socket","useRef","scrollRef","useEffect","current","io","emit","error","console","log","on","prevState","scrollIntoView","behaviour","block","style","width","height","ref","map","msg","idx","preventDefault","sendMessage","changeMessage","display","flexDirection","marginLeft","color","fontWeight","userObj","alignItems","marginRight","borderRadius","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d509e5d.chunk.js","sourcesContent":["import '../scss/Login.scss';\n\nconst Login = ({ user, setUser, room, setRoom, setUsername }) => {\n  return (\n    <div className=\"login-container\">\n      <form onSubmit={(e) => setUsername(e)}>\n        <label>Username</label>\n        <input type=\"text\" value={user} onChange={(e) => setUser(e.target.value)} />\n        <label>Room</label>\n        <input type=\"text\" value={room} onChange={(e) => setRoom(e.target.value)} />\n        <button type=\"submit\">Start chatting <i className=\"fas fa-sign-in-alt\"></i></button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import '../scss/Message.scss';\n\nconst Message = ({ message: { user, text }, name }) => {\n  const sendByCurrentUser = user === name;\n\n  return (\n    <div className={`message-container ${sendByCurrentUser ? 'self-sender-container': ''}`}>\n      <div className={`message ${sendByCurrentUser ? 'self-sender' : ''}`}>\n        { text }\n      </div>\n      { !sendByCurrentUser &&\n        <div className=\"message-sender\">\n          { user }\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default Message;\n","import { useEffect, useRef, useState } from 'react';\nimport './scss/App.scss';\nimport Login from './components/Login';\nimport Message from './components/Message';\nimport { io } from 'socket.io-client';\n\nconst App = () => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState('');\n  const [room, setRoom] = useState('');\n  const [isUserSet, setIsUserSet] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const socket = useRef();\n  const scrollRef = useRef();\n\n  useEffect(() => {\n    if(isUserSet) {\n      socket.current = io('ws://localhost:8000');\n  \n      socket.current.emit('join', { name: user, room }, (error) => {\n        console.log(`error joining chat: ${error}`);\n      });\n  \n      socket.current.on('getRoomData', ({ users }) => {\n        setUsers(users);\n\n        console.log(users);\n      });\n\n      socket.current.on('message', message => {\n        setMessages((prevState) => (\n          [...prevState, message]\n        ));\n        scrollRef.current?.scrollIntoView({ behaviour: 'smooth', block: 'end' });\n      });\n    }\n  }, [isUserSet]);\n\n  useEffect(() => {\n    if(isUserSet) {\n      socket.current.emit('userTyping', { room, isTyping }, (error) => {\n        console.log(`error typing: ${error}`);\n      });\n    }\n  }, [isTyping]);\n\n  const setUsername = (e) => {\n    e.preventDefault();\n\n    if(user) {\n      setIsUserSet(true);\n    }\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if(message) {\n      socket.current.emit('sendMessage', { message, room });\n  \n      setMessage('');\n      setIsTyping(false);\n    }\n  };\n\n  const changeMessage = (e) => {\n    setMessage(e.target.value);\n\n    if(e.target.value !== '') {\n      setIsTyping(true);\n    } else {\n      setIsTyping(false);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      {isUserSet ? \n        <div style={{ width: '80%', height: '80vh' }}>\n          <div className=\"chat-container\">\n            <div className=\"messages-container\">\n              <div className=\"messages\" ref={scrollRef}>\n                {messages.map((msg, idx) => <Message key={idx} message={msg} name={user} />)}\n              </div>\n            </div>\n            <form className=\"send-msg-container\" onSubmit={(e) => sendMessage(e)}>\n              <div className=\"text-input-container\">\n                <input type=\"text\" value={message} onChange={(e) => changeMessage(e)}/>\n              </div>\n              <div className=\"send-icon-container\">\n                <button className=\"send-icon\" type=\"submit\">\n                  <i className=\"fas fa-paper-plane\"></i>\n                </button>\n              </div>\n            </form>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '10px', color: 'white' }}>\n            <span style={{ fontWeight: 'bold' }}>online</span>\n            <div style={{ display: 'flex' }}>\n              { users.map((userObj, idx) => \n                <div key={idx} style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                  <div style={{ width: '10px', height: '10px', marginRight: '4px', borderRadius: '50%', backgroundColor: '#25D366' }}></div>\n                  <span>{ userObj.name }{ userObj.name === user ? ' (me)' : '' }{ userObj.name !== user && userObj.isTyping ? ' (is typing...)' : '' }</span>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        :\n        <Login \n          user={user} \n          setUser={setUser} \n          room={room} \n          setRoom={setRoom} \n          setUsername={setUsername} \n        />\n      }\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}